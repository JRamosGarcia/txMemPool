version: "3"
services:

  configuration_server:
    image: ${REGISTRY_HOST}/configuration_server:latest
    container_name: configuration_server 
#    ports:
#      - "8888:8888"
    environment:
      server.port: ${CONFIGURATION_SERVER_PORT}
    
    networks:
      bitnet:
        ipv4_address: ${CONFIGURATION_SERVER_IP_ADDRESS}
        
  service_discovery:
    image: ${REGISTRY_HOST}/service_discovery:latest
    container_name: service_discovery 
#    ports:
#      - "8761:8761"
    networks:
      bitnet:
        ipv4_address: ${SERVICE_DISCOVERY_IP_ADDRESS}
    
  mongo1:
    image: mongo:latest
    container_name: mongo1
#    ports:
#     - "27017:27017"
    networks:
      bitnet:
       ipv4_address: ${MONGO_1_IP_ADDRESS}
    volumes:
      - mongodb_data_volume1:/data/db

  mongo2:
    image: mongo:latest
    container_name: mongo2
#    ports:
#      - "27017:27017"
    networks:
      bitnet:
       ipv4_address: ${MONGO_2_IP_ADDRESS}
    volumes:
      - mongodb_data_volume2:/data/db

  bitcoind_adapter1:
    image: ${REGISTRY_HOST}/bitcoind_adapter:latest
    container_name: bitcoind_adapter1 
#    ports:
#      - "8080:8080"
#      - "8081:8081"
    environment:
      spring.cloud.config.uri: http://${CONFIGURATION_SERVER_IP_ADDRESS}:${CONFIGURATION_SERVER_PORT}
      eureka.client.serviceUrl.defaultZone: http://${SERVICE_DISCOVERY_IP_ADDRESS}:${SERVICE_DISCOVERY_PORT}/eureka/
      spring.data.mongodb.uri: mongodb://${MONGO_1_IP_ADDRESS}:${MONGO_1_PORT}/memPool
      bitcoind.host: ${BITCOIND_HOST_IP_ADDRESS}
      bitcoind.port: ${BITCOIND_PORT}
      server.port: ${BITCOIND_1_ADAPTER_PORT}
    networks:
      bitnet:
       ipv4_address: ${BITCOIND_1_ADAPTER_IP_ADDRESS}
    restart: on-failure
    depends_on:
      - mongo1
      - configuration_server
      - service_discovery

  bitcoind_adapter2:
    image: ${REGISTRY_HOST}/bitcoind_adapter:latest
    container_name: bitcoind_adapter2 
#   ports:
#      - "8082:8080"
#      - "8083:8081"
    environment:
      spring.cloud.config.uri: http://${CONFIGURATION_SERVER_IP_ADDRESS}:${CONFIGURATION_SERVER_PORT}
      eureka.client.serviceUrl.defaultZone: http://${SERVICE_DISCOVERY_IP_ADDRESS}:${SERVICE_DISCOVERY_PORT}/eureka/
      spring.data.mongodb.uri: mongodb://${MONGO_2_IP_ADDRESS}:${MONGO_2_PORT}/memPool
      bitcoind.host: ${BITCOIND_HOST_IP_ADDRESS}
      bitcoind.port: ${BITCOIND_PORT}
      server.port: ${BITCOIND_2_ADAPTER_PORT}
    networks:
      bitnet:
       ipv4_address: ${BITCOIND_2_ADAPTER_IP_ADDRESS}
    restart: on-failure
    depends_on:
      - mongo2
      - configuration_server
      - service_discovery


  tx_mempool:
    image: ${REGISTRY_HOST}/tx_mempool:latest
    container_name: tx_mempool
#    ports:
#      - "8084:8080"
#      - "8085:8081"
    environment:
       spring_cloud_config_uri: http://${CONFIGURATION_SERVER_IP_ADDRESS}:${CONFIGURATION_SERVER_PORT}
       eureka.client.serviceUrl.defaultZone: http://${SERVICE_DISCOVERY_IP_ADDRESS}:${SERVICE_DISCOVERY_PORT}/eureka/
       management.server.port: ${TX_MEMPOOL_MANAGEMENT_PORT}
       server.port: ${TX_MEMPOOL_PORT}
    networks:
      bitnet:
       ipv4_address: ${TX_MEMPOOL_IP_ADDRESSS}
    restart: on-failure
    depends_on:
#      - mongo
      - configuration_server
      - service_discovery
      - bitcoind_adapter1
      - bitcoind_adapter2

  gateway_service:
    image: ${REGISTRY_HOST}/gateway_service:latest
    container_name: gateway_service
    networks:
      bitnet:
       ipv4_address: ${GATEWAY_SERVICE_IP_ADDRESS}
    restart: on-failure
#TODO: Hay que volver a poner esto
#    depends_on:
#      - configuration_server
#      - service_discovery
#      - bitcoind_adapter1
#      - bitcoind_adapter2
#      - tx_mempool
       
networks:
  bitnet:
    driver: bridge
    ipam:
      config:
        - subnet:  172.18.0.0/16
#        - gateway: 172.18.0.1
volumes:
  mongodb_data_volume1:
  mongodb_data_volume2: